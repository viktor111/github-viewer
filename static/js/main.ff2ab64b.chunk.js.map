{"version":3,"sources":["components/Card.js","components/CardList.js","components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Card","state","hidden","profile","this","props","className","style","width","marginTop","marginBottom","onClick","setState","rel","target","href","html_url","src","avatar_url","alt","name","bio","public_repos","followers","following","React","Component","CardList","profiles","map","id","Form","userName","msg","handleSubmit","event","a","preventDefault","username","axios","get","catch","err","response","status","responseUser","onSubmit","data","console","log","onChangeHandler","value","class","color","marginRight","type","placeholder","onChange","required","App","addNewProfile","profileData","prevState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QA2BeA,E,4MAxBXC,MAAM,CAACC,QAAQ,G,4CAEf,WAAS,IAAD,OACEC,EAAUC,KAAKC,MACrB,OACI,sBAAKH,OAAQE,KAAKH,MAAMC,OAAQI,UAAU,6DAA6DC,MAAO,CAACC,MAAO,QAASC,UAAU,IAAKC,aAAc,IAA5J,UACI,sBAAMC,QAAS,WAAO,EAAKC,SAAS,CAACV,QAAQ,KAASI,UAAU,MAAMC,MAAO,CAACG,aAAc,MAC5F,mBAAGG,IAAI,aAAaC,OAAO,SAASC,KAAMZ,EAAQa,SAAlD,SACI,qBAAKV,UAAU,eAAeW,IAAKd,EAAQe,WAAYC,IAAI,OAE/D,sBAAKb,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,SAA4BH,EAAQiB,OACpC,mBAAGd,UAAU,YAAb,SAA0BH,EAAQkB,SAEtC,qBAAIf,UAAU,8BAAd,UACI,qBAAIA,UAAU,kBAAd,2BAA+CH,EAAQmB,gBACvD,qBAAIhB,UAAU,kBAAd,wBAA4CH,EAAQoB,aACpD,qBAAIjB,UAAU,kBAAd,wBAA4CH,EAAQqB,uB,GAlBrDC,IAAMC,WCYVC,EAZE,SAACtB,GACd,OACI,qBAAKC,UAAU,YAAf,SACI,sBAAKA,UAAU,MAAf,UACI,uCACCD,EAAMuB,SAASC,KAAI,SAAA1B,GAAO,OAAI,cAAC,EAAD,eAA2BA,GAAhBA,EAAQ2B,a,yCCoCnDC,E,4MAvCX9B,MAAQ,CAAC+B,SAAU,GAAGC,IAAI,GAAI/B,QAAQ,G,EAEtCgC,a,uCAAe,WAAMC,GAAN,iBAAAC,EAAA,sEAEPD,EAAME,iBACFC,EAAW,EAAKrC,MAAM+B,SAHnB,SAKoBO,IAAMC,IAAN,uCAA0CF,IACpEG,OAAM,SAAAC,GACwB,MAAxBA,EAAIC,SAASC,QAAgB,EAAKhC,SAAS,CAACqB,IAAI,sBAAuB/B,QAAQ,IACvD,MAAxBwC,EAAIC,SAASC,QAAgB,EAAKhC,SAAS,CAACqB,IAAI,qEAAsE/B,QAAQ,OAR9H,OAKD2C,EALC,OAWP,EAAKxC,MAAMyC,SAASD,EAAaE,MACjC,EAAKnC,SAAS,CAACoB,SAAS,KACxBgB,QAAQC,IAAIJ,EAAaE,MAblB,kDAgBPC,QAAQC,IAAR,MAhBO,0D,wDAoBfC,gBAAkB,SAAAf,GACd,EAAKvB,SAAS,CAACoB,SAAUG,EAAMrB,OAAOqC,S,4CAG1C,WAAS,IAAD,OACJ,OACI,qBAAKC,MAAM,uCAAX,SACI,uBAAM9C,UAAU,eAAewC,SAAU1C,KAAK8B,aAA9C,UACI,mBAAG3B,MAAO,CAAC8C,MAAO,MAAOC,YAAa,IAAK3C,QAAS,WAAO,EAAKC,SAAS,CAACqB,IAAI,GAAG/B,QAAQ,KAASA,OAAQE,KAAKH,MAAMC,OAArH,SAA8HE,KAAKH,MAAMgC,MACzI,uBAAO3B,UAAU,uBAAuBiD,KAAK,SAASC,YAAY,qBAAqBL,MAAO/C,KAAKH,MAAM+B,SAAUyB,SAAUrD,KAAK8C,gBAAiBQ,UAAQ,IAC3J,wBAAQpD,UAAU,uCAAlB,6B,GAjCDmB,IAAMC,WCsBViC,E,4MAnBb1D,MAAQ,CACN2B,SAAS,I,EAGXgC,cAAgB,SAAAC,GACd,EAAKjD,UAAS,SAAAkD,GAAS,MAAK,CAC1BlC,SAAS,GAAD,mBAAMkC,EAAUlC,UAAhB,CAA0BiC,S,4CAItC,WACE,OACE,sBAAKvD,UAAU,gBAAf,UACI,cAAC,EAAD,CAAMwC,SAAU1C,KAAKwD,gBACrB,cAAC,EAAD,CAAUhC,SAAUxB,KAAKH,MAAM2B,kB,GAfvBH,IAAMC,WCOTqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ff2ab64b.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nclass Card extends React.Component{\r\n    state={hidden: false}\r\n\r\n    render(){\r\n        const profile = this.props;\r\n        return(\r\n            <div hidden={this.state.hidden} className=\"card col-md-6 col-lg-4 shadow-lg p-3 mb-5 bg-white rounded\" style={{width: \"18rem\", marginTop:150, marginBottom: 20}}>\r\n                <span onClick={() => {this.setState({hidden: true})}} className=\"dot\" style={{marginBottom: 10}}></span>\r\n                <a rel=\"noreferrer\" target=\"_blank\" href={profile.html_url}>\r\n                    <img className=\"card-img-top\" src={profile.avatar_url} alt=\"\"/>\r\n                </a>                \r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{profile.name}</h5>\r\n                    <p className=\"card-text\">{profile.bio}</p>\r\n                </div>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    <li className=\"list-group-item\">Public repos: {profile.public_repos}</li>\r\n                    <li className=\"list-group-item\">Followers: {profile.followers}</li>\r\n                    <li className=\"list-group-item\">Following: {profile.following}</li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Card;","import Card from \"./Card\"\r\n\r\nconst CardList = (props) => {    \r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <h1>Users</h1>\r\n                {props.profiles.map(profile => <Card key={profile.id} {...profile}/>)}  \r\n            </div>                           \r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default CardList;","import React from \"react\"\r\nimport axios from \"axios\"\r\n\r\nclass Form extends React.Component{\r\n    state = {userName: \"\",msg:\"\", hidden: true};\r\n\r\n    handleSubmit = async event => {\r\n        try{\r\n            event.preventDefault();\r\n            let username = this.state.userName;\r\n    \r\n            const responseUser = await axios.get(`https://api.github.com/users/${username}`)\r\n            .catch(err => {\r\n                if(err.response.status === 404) this.setState({msg:\"Could not find user\", hidden: false});\r\n                if(err.response.status === 403) this.setState({msg:\"Please wait a while before more requests are allowed by github api\", hidden: false});\r\n            });\r\n\r\n            this.props.onSubmit(responseUser.data);  \r\n            this.setState({userName:\"\"});\r\n            console.log(responseUser.data);\r\n        }\r\n        catch(err){\r\n            console.log(err)\r\n        }          \r\n    }\r\n\r\n    onChangeHandler = event => {\r\n        this.setState({userName: event.target.value})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <nav class=\"navbar navbar-dark bg-dark fixed-top\">\r\n                <form className=\"form-inline \" onSubmit={this.handleSubmit}>\r\n                    <p style={{color: \"red\", marginRight: 10}} onClick={() => {this.setState({msg:\"\",hidden: true})}} hidden={this.state.hidden}>{this.state.msg}</p>\r\n                    <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"GitHub search user\" value={this.state.userName} onChange={this.onChangeHandler} required/>\r\n                    <button className=\"btn btn-outline-success my-2 my-sm-0\">Search</button>\r\n                </form>\r\n            </nav>            \r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;","import './App.css';\nimport CardList from \"./components/CardList.js\"\nimport Form from \"./components/Form.js\"\nimport React from \"react\"\n\nclass App extends React.Component{\n  state = {\n    profiles:[]\n  }\n\n  addNewProfile = profileData => {\n    this.setState(prevState => ({\n      profiles: [...prevState.profiles, profileData]\n    }));\n  }\n\n  render(){\n    return (\n      <div className=\"App container\">\n          <Form onSubmit={this.addNewProfile}/>\n          <CardList profiles={this.state.profiles}/>\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}